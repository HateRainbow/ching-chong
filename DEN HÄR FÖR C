import os 
from datetime import datetime 
import sys
#funktion som tar tillbaka till meny
#Lägger objekt i self.objekt och sedan med addObject funktion kan man sätta in de saker som kommer att läggas.
class Packlistor: 
    def __init__(self):
        self.object_list = []
        self.datum = datetime.now().isoformat("#", "seconds").replace('#',' ')

    def addObject(self, objekt):
        self.object_list.append(objekt)

def controller():
        while True:
            controller=int(input('För att gå tillbaka till meny tryck "1" och för stänga tryck "0": '))
            if controller not in [1,0]:
                print('Fel input')
                os.system("cls||clear")
                continue
            elif controller == 0:
                sys.exit('Programmet avslutar ...')
            else:
                return controller 

try:
    print('Detekterar filen ...')
    with open('packlistorC.txt'):
        pass
except FileNotFoundError:
    with open('packlistorC.txt','a', encoding="utf-8") as f:
        print('Filen hittades inte. Skapas nu')
        f.close()
        
print('Text fil hitaddes: packlistorC.txt\n')
          
#upprepar meny tills lagrad giltig input
while True:  
    pack=Packlistor()
    
    FIL="packlistorC.txt"
    ENCODING="utf-8"
    print('tryck på vilken knapp som helst för visa listor')
    print('---> N Ny packlista')
    print('---> S lägg till en sak i en lista')
    print('---> X Avsluta.')

    button=input('Tryck en av kommando: ').lower() #stora bokstäver blir erkänd som gemen
    
    os.system("cls||clear")
    #os.system skriver in i terminalen och rensa den, så det kommer inte upp två meny i skärm 
    if button == 'n':
        beskrivning = 'Packlista; '+ input('Plats och kort beskrivning? ').capitalize()
        n = int(input('Hur många objekt?'))
        
        for i in range(n):
            föremål = input('Skriv varje enskild föremål och tryck enter: ')
            pack.addObject(föremål)  

        pack_str = ', '.join(pack.object_list)  
        print(' ')
        time = input('Vilken tid (HH:MM)? ')
        print(' ')
        month_given = int(input('Vilken månad (skriv i MM)?'))
        print(' ')
        given_day = int(input('Vilken dag (skriv i DD)? '))
        print(' ')
        given_year = int(input('Vilken år (skriv i ÅÅÅÅ)?'))
        print(' ')
        
        with open(FIL, 'a',encoding=ENCODING) as f:
            f.write(f"{beskrivning} {given_year}-{month_given}-{given_day} {time}:\n {pack_str}\n")
            print('ny packlista ',f"{beskrivning} skapades {given_year}-{month_given}-{given_day} {time}:\n{pack_str}")
            os.system("cls||clear")
            
            for i in pack.object_list:
                if i == len(pack.object_list): 
                    f.write(f'{pack_str} \n')  
                    f.close()
                    
                    controller()
                    print('skickas tillbaka till meny')
                    os.system("cls||clear")  # Assuming Windows
                    continue
                
    if button == 's':
        sökord=input("Ange en datum: ")

        with open(FIL, "r") as f:
            r = f.readlines()
            matching_packlists=[rad for rad in r if sökord in rad]

        if matching_packlists:
            print("Packlistor som matchar:")
            for idx, packlist in enumerate(matching_packlists, start=1):
                print(f"{idx}. {packlist}")

            val = int(input("Välj en packlista med nummer: "))

            if 1 <= val <= len(matching_packlists):
                
                valt_pack=matching_packlists[val - 1]
                packlista_index=r.index(valt_pack)
                item_index=packlista_index + 1
                
                if 0<= item_index <= len(r): # Se till att nästa rad finns (där packlistas objekt är listade)
                    nuvarande_lista=r[item_index].strip()  # Befintligt innehåll
                    
                    ny_innehål=input("Vad vill du lägga till i packlista? ")
                    ny_lista=f"{nuvarande_lista}, {ny_innehål}"    
                    
                    with open(FIL, "w",encoding=ENCODING) as f:
                        
                        for idx, line in enumerate(r):      
                            if idx == item_index: #idx är siffror        
                                # Uppdatera raden efter packlista dvs där föremål för packlista befinner sig
                                f.write(f"{ny_lista}\n")      
                                print(f'Det ny objekt {ny_innehål} skrevs in.')
                                print(f'Ny packlista ser ut så här: {ny_lista}') #lägger ny del av text         

                            else:
                                f.write(line) #Skriver om resten av texten
                                if  line == len(r): 
                                    os.system("cls||clear")
                                    f.close()
                                    controller()
                                    print('skickas tillbaka till meny')
                                    os.system("cls||clear")  # Assuming Windows
                                    continue
            else:    
                print("Ogiltigt knappt.")  
        else:
            print("Inga packlistor hittades som matchar sökordet. (Kanske Caps Lock)")
            continue
    
    if button == 'x':
        sys.exit('Programmet avslutar ... ')

    else:
        key_word= "Packlista; "
        with open(FIL, "r") as f:
            r = f.readlines()
            matching_packlists=[rad for rad in r if key_word in rad]
        
        if matching_packlists: #om det finns innehål kommer det att gå vidare
            print("Packlistor som matchar:")
            for index, packlist in enumerate(matching_packlists, start=1):
                print(f"{index}. {packlist}")
            try:
                val=int(input("Välj en packlista med nummer: "))
                
                if 0 <= val <= len(r):        
                    valt_pack=matching_packlists[val - 1]
                    item_index=r.index(valt_pack) + 1
                    nuvarande_lista=r[item_index].strip()  
                    print(nuvarande_lista)
                    
            except IndexError:
                print('ogiltigt input')
            except ValueError:
                print('Input lagrat är inte en siffra')
            
            finally: 
                f.close()
                controller()
                print('skickas tillbaka till meny')
                os.system("cls||clear")  # Assuming Windows
                continue 
        else:
            print('Ingen packlista hittades.')
